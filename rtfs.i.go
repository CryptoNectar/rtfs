// Code generated by ifacemaker. DO NOT EDIT.

package rtfs

import (
	"context"
	"io"
	"time"

	ipfsapi "github.com/RTradeLtd/go-ipfs-api"
)

// Manager provides functions for interacting with IPFS
type Manager interface {
	// SetTimeout is used to set a timeout for our api client
	SetTimeout(time time.Duration)
	// PublishToIPNSDetails is used for fine grained control over IPNS record publishing
	PublishToIPNSDetails(contentHash, keyName string, lifetime, ttl time.Duration, resolve bool) (*ipfsapi.PublishResponse, error)
	// Pin is a wrapper method to pin a hash to the local node,
	// but also alert the rest of the local nodes to pin
	// after which the pin will be sent to the cluster
	Pin(hash string) error
	// Add is a wrapper used to add a file to IPFS
	// currently until https://github.com/ipfs/go-ipfs/issues/5376 it is added with no pin
	// thus a manual pin must be triggered afterwards
	Add(r io.Reader) (string, error)
	// GetObjectFileSizeInBytes is used to retrieve the cumulative byte size of an object
	GetObjectFileSizeInBytes(key string) (int, error)
	// ObjectStat is used to retrieve the stats about an object
	ObjectStat(key string) (*ipfsapi.ObjectStats, error)
	// ParseLocalPinsForHash checks whether or not a pin is present
	ParseLocalPinsForHash(hash string) (bool, error)
	// BuildCustomRequest is used to build a custom request
	BuildCustomRequest(ctx context.Context, url, commad string, opts map[string]string, args ...string) (*ipfsapi.Response, error)
	// DHTFindProvs is used to find providers of a given CID
	// Currently bugged and wil only fetch 1 provider
	DHTFindProvs(cid, numProviders string) error
}
